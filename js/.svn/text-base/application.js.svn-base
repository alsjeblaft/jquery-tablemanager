Array.prototype.index = function(val) {
    for(var i = 0, l = this.length; i < l; i++) {
        if(this[i] == val) return i;
    }
    return null;
}

Array.prototype.include = function(val) {
    return this.index(val) !== null;
}

Array.prototype.removeItem=function(str) {
    for(i=0; i<this.length ; i++){
        if(escape(this[i]).match(escape(str))){
            this.splice(i, 1);  break;
        }
    }
    return this;
}

function manipulated_accordion() {
    $(document).find('.mainCol').find('.bd').each(function() {
        $(this).hide(); 
    });
    
    $(document).find('.mainCol').find('.hd').find('h3').each(function() {
        $(this).click(function() {
            switch_section($(this).parent(), 1);
        }); 
	$(this).before('<span class="light-toggle-icon" onclick="switch_section($(this).parent(), 1 );"> </span>');
    });   
}

function switch_section(e, reload) {
    if (reload == 1) { 
	var sections = get_sections();		
    }
    
    if (e.next().is(":visible")) {
	e.children('.light-toggle-icon').toggleClass('light-toggle-icon-expanded');
	if (reload == 1) {
	    if (sections.include(e.find('h3').attr('id'))) {
		sections.removeItem(e.find('h3').attr('id'));
	    }
	} else {
	    e.next().hide();
	}
    } else {
	
	e.children('.light-toggle-icon').toggleClass('light-toggle-icon-expanded');
	if (reload == 1) {
	    if (!sections.include(e.find('h3').attr('id'))) {
		sections.push(e.find('h3').attr('id'));
	    }
	} else {
	    e.next().show();
	}
    }
    
    if (reload == 1) {
	set_sections(sections);
    }
}

function open_section(e) {
    if( e.length ) {
	e.children('.light-toggle-icon').addClass('light-toggle-icon-expanded');
	e.next().show();
	$.scrollTo( e, {duration:1500} );
    }
}

function get_sections() {
    var sections = getURLParameter("sections").split(',');
    if( sections[0] != "null" ) {
	return sections;
    }
    return [];
}

function set_sections(sections) {
    var param_sections = "",
    href = window.location.href,
    hash = (/#/.test(href))?href.replace(/.*(#.*)/, "$1"):"",
    href_without_hash = (/#/.test(href))?href.replace(/(.*)#.*$/, "$1"):href;
    /*console.log('set', href)
    console.log('set', hash)
    console.log('set', href_without_hash)*/
    if( /\?sections=.*/.test(href_without_hash) ) {
	param_sections = href_without_hash.replace(/\?sections=[^&]*/g, "?sections=" + sections.join(',') );
    } else {
	param_sections = href_without_hash + "?sections=" + sections.join(',');
    }
    window.location.replace( param_sections );
}

function furtherreading_section(bib) {
    var bibentry = $("" + bib + "");
    var section = bibentry.parents("div.modInfo");
    section.find('.light-toggle-icon').addClass('light-toggle-icon-expanded');
    section.find("div.bd").show();
    $.scrollTo( bibentry, {duration:1500} );
}

function get_highlight_ids () {
    var highlighti = getURLParameter("highlight").split(',');
    if( highlighti[0] != "null" ) {
	return highlighti;
    }
    return [];
}
function get_highlight_term () {
    var highlightt = getURLParameter("term").split(',');
    if( highlightt[0] != "null" ) {
	return highlightt;
    }
    return [];
}
function getURLParameter(name) {
    return decodeURI(
        (RegExp(name + '=' + '(.+?)(&|$)').exec(location.search)||[,null])[1]
    );
}

function section_is_visible( sec ) {
    var secs = get_sections();
    visible = false;
    for( i = 0, j = secs.length; i < j; i++ ) {
	if( secs[i] == sec ) {
	    visible = true;   
	}
    }
    return visible;
}

// overwriting JQuery contains function for insesitive search on page for highlighting term
/*jQuery.expr[':'].contains = function(a, i, m) {
  return jQuery(a).text().toUpperCase()
      .indexOf(m[3].toUpperCase()) >= 0;
};*/


$(document).ready(function(){

    $(".adminbutton").each(function(){
        $(this).button();
    });

    $('#toc').ready(function() {
        manipulated_accordion();
       	manipulated_toc();
    })
    
    $('#browse').load(browselist, function() {
	$("ul.accordion").accordion({
	    autoHeight: false,
	    collapsible: true,
	    active: false
  	})
    });
    
    
    var opened_sections = get_sections();
    var opened_sec_len = opened_sections.length;
    
    if ( opened_sec_len && opened_sections[0] != "" ) {
        for(i=0; i<opened_sec_len; i++){
            $('#' + opened_sections[i]).parent().next().show();
	    $('#' + opened_sections[i]).prev('.light-toggle-icon').toggleClass('light-toggle-icon-expanded');
        }
	open_section($("#" + opened_sections[opened_sec_len - 1]).parent());
    }
    
    $('.modInfo h3 a').click(function() {
    	$(this).toggleClass("expanded").parent().parent().next().toggle();
    	return false;
    }).parent().parent().next().hide();
    
    
    // highlight search result on landing page
    var highlightids = get_highlight_ids(),
    highlightterm = get_highlight_term();
    high_by_id = false;
    
    if( highlightids != [] ) {
	//console.log('highlight by id', highlightids)
	for( i=0; i<highlightids.length; i++ ){
	    var element_by_id = $("#" + highlightids[i] ),
	    el_parent = element_by_id.parent();
	    if( el_parent.length && el_parent.attr( "class" ) != 'hd' ) {
		el_parent.attr( "class", el_parent.attr( "class" ) + " highlight" );
		high_by_id = true;
	    }
	}
    }
    if( highlightterm != [] ) {
	if( opened_sections.length ) {
	    for( op = 0, opl = opened_sections.length; op < opl; op++ ) {
		var opSecDiv = $( "#" + opened_sections[ op ]).parents("div.modInfo").find("div.bd");
		for( hit = 0, hitl = highlightterm.length; hit < hitl; hit++ ) {
		    searchterm = highlightterm[ hit ].replace( new RegExp( 's$' ), '' );
		    opSecDiv.html( opSecDiv.html().replace( new RegExp( "(?![^<>]*>)(" + highlightterm[ hit ] + ")", 'gi' ), '<span class="highlight">$1</span>') );
		}
	    }
	} else { // no sections on page
	    var searchDiv = $("div.mainCol");
		for( hit = 0, hitl = highlightterm.length; hit < hitl; hit++ ) {
		    searchterm = highlightterm[ hit ].replace( new RegExp( 's$' ), '' );
		    searchDiv.html( searchDiv.html().replace( new RegExp( "(?![^<>]*>)(" + highlightterm[ hit ] + ")", 'gi' ), '<span class="highlight">$1</span>') );
		}
	    
	    
	}
    }

    $('#search').autocomplete({
	minLength: 0,
	source: searchterms,
	select: function(event, ui) {
	    link = 's_';
  	    if (ui.item.t) {
		link += ui.item.t;
	    } else if (ui.item.l) {
		link += ui.item.l;
	    } else {
		link += ui.item.label;
	    }
	    window.location.href = link + '.html';
	    return false;
	}
    })
	.data( "autocomplete" )._renderItem = function( ul, item ) {
	    if (item.r == 'i') {
		label = '<span class="ind">' + item.label + '</span>';
	    } else {
		label = item.label;
	    }
	    
	    link = '';
	    if (item.l) {
		link += ' \u2192\u00a0<i>' + item.l + '</i>';
	    }
	    return $( "<li></li>" )
		.data( "item.autocomplete", item )
		.append( "<a>" + label + link + "</a>" )
		.appendTo( ul );
	};
    
    var noresultsID = "nosearchresults";
    var noresultsDIV = $("<div id='" + noresultsID + "'>No results found for this search term.</div>");
    
    $("body").delegate( "input#search", "keyup", function(){
	var inputfield = $(this)
	var searchword = inputfield.val();
	var resultlist = $("ul.ui-autocomplete");
	if( searchword.length > 1 && !resultlist.is(":visible")) {

	    if( ! $("#" + noresultsID ).length ) {
		$("body").append( noresultsDIV ).show();
		$( "#" + noresultsID ).css( "left", inputfield.offset().left );
		$( "#" + noresultsID ).css( "top", inputfield.offset().top + inputfield.outerHeight() );
	    } else {
		$( "#" + noresultsID ).show();
	    }
	} else {
	    $( "#" + noresultsID ).hide();
	}
    });

    $("input#search").bind( "focusout", function(){
	$( "#" + noresultsID ).hide();
    });
    
    $("ul.accordion").accordion({
    	autoHeight: false,
    	collapsible: true,
    	active: false
    });
    

    /* TABLETOOLS */

    // move out thead > tr with only one cell and activate ColSel for the second tr
    $("table > thead").each(function(){
	var rows = $(this).find("tr");
	if( rows.length == 2 ) {
	    var counter = 0;
	    rows.each(function(){
		counter += 1;
		thCells = $(this).find("th");
		if( thCells.length == 1 ) {
		    var ulSel = thCells.find("ul.ulSelectColumn"),
		    content = $(this).find("p"),
		    partable = $(this).parents("table"),
		    newtable = $("<table></table>").append("body").show();
		    
		    $( newtable ).html("<thead><th></th></thead>")
		    $( newtable ).attr("class", partable.attr("class") + " prepend-data-table");
		    $( newtable ).find("th").html( content );
		    $( newtable ).insertBefore(partable).show();
		    $(this).remove();
		}
		if( counter == 2  ) {
		    $(this).find("th").not(".topBorder").attr("class", "topBorder");
		}

	    });
	}
    });

    // transform td´s in thead´s into th
    $("table thead").each(function(){
	var tdCells = $(this).find("td");
	for( i = 0, j = tdCells.length; i < j; i++ ) {
	    $(tdCells[i]).replaceWith("<th class='topBorder'>" + $(tdCells[i]).html() + "</th>")
	}
    });



    $("table.FixedHeaderAndColumn").click(function(){
	//console.log($("#asd").scrollLeft());
//	$(this).scrollLeft();
//	document.getElementById("pos-top").scrollIntoView();
    });

    $("table.FixedHeaderAndColumn").each(function() {
	var HeaderRows = $(this).find("thead tr").length;
	$(this).fixedtableheader( { headerrowsize:HeaderRows});
	var tableDiv = $(this).parents("div.tableDiv");
	var tableHeight = $(this).height();
//	tableDiv.tinyscrollbar({axis:'x'});
//	tableDiv.find(".viewport").height( tableHeight );
//	tableDiv.find(".scrollbar").height( "100px" );
    });
    $("table.scrollableFixedHeaderTable").each(function() {
	var FixTblWidth = $(this).width();
	var FixTblHeight = $(this).height();
	$(this).scrollableFixedHeaderTable(FixTblWidth,FixTblHeight,null,null,1);
    });
    $("table.fixedTable").each(function() {
	var FixTblWidth = $(this).width();
	var FixTblHeight = $(this).height();
	var tableID = $(this).attr("id");
	var fixedColsLength = $(this).find("tbody tr:first th").length;

	$(this).fixedTable({
            width: FixTblWidth,
            height: FixTblHeight,
            fixedColumns: fixedColsLength,
            classHeader: "fixedHead",
            classFooter: "fixedFoot",
            classColumn: "fixedColumn",
            fixedColumnWidth: 125,
            outerId: tableID,
            Contentbackcolor: "#FFFFFF",
            Contenthovercolor: "#99CCFF",
            fixedColumnbackcolor:"#187BAF",
            fixedColumnhovercolor:"#99CCFF"
        });
    });


  // Begin ColSel
  $('table.ColSel').each( function(){
    tablehead = $(this).find("thead");
    if( tablehead.find("th").length > 4 ) {
      var tabtargetcolumn = this.id + 'target',
        tableID = this.id,
        currentrow = $(this);
      if( currentrow.find("th").length != 1 && tablehead.find("tr:visible").length == 1) {
      
        // start jquery columnManager Plugin
        $('#' + tableID).columnManager({
          listTargetID:tabtargetcolumn,//currentrow.find("ul.ulSelectColumn").attr("id"),
          onClass: 'advon',
          offClass: 'advoff',
          hideInList: [1]
        });
   
        // show help info, when page "started" on this table
        if( $(this).is(":visible") ) {
          helptext = $( "<div class='helptext intro'><span class='helptext'>Click on a column header to hide/display a column or on <img src='img/selectcol.png'/> to display/hide selected columns.</span></div>").show();
          helptext.find("span").css("background-color", $(this).find("thead tr th:first").css("background-color"));
          $( helptext ).insertBefore( $(this) );
        }
      } else {
        currentrow.find("ul.ulSelectColumn").hide();
      }
    } else {
      $(this).find("ul.ulSelectColumn").hide();
    }
    $('#' + this.id + 'ulSC').clickMenu({onClick: function(){}});
  });
  // End ColSel
  
      
  		
  $('.footnoteref,.headfootnoteref').tooltip({
  	delay: 0,
  	showURL: false,
  	fade: 250,
  	bodyHandler: function() {
  	    refID = $(this).attr('id');
  	    return $( '#' + refID.substr( 4 ) + ' td:nth-child(2)').html();
  	}
  });
      
  $('a.see').tooltip({ 
  	delay: 0, 
  	showURL: false,
  	fade: 250
  });
  
  $('a.see').click(function(){ 
  	var href = $(this).attr("href")
  	if( href.search(/^#/) != -1 ) {
  	    furtherreading_section(href);
  	}
  });
  
  $('a.admindelete').click(function() {
    Check = confirm("Are you sure you want to delete this?");
  	if (Check == false) return false;
  });
  
  $('a').click(function(){ 
    var href = $(this).attr("href"),
  		target = $(this).attr("target"),
  		aclass = $(this).attr("class");
  	if( href.search(/^http:/) != -1 && target != '_blank' && aclass != 'nowarn') {
  		Check = confirm("By following this link, you are exiting the Clinical Handbook of Psychotropic Drugs Online. The authors and publisher of the Clinical Handbook are in no way responsible for the content of any external pages linked to.");
  		if (Check == false) return false;
  	}
  });
      
	$('table.tablemanager').each(function() {
    $.fn.tablemanager($(this), {mincols: 5});
  });
  
});

function manipulated_toc() {
    // $('#toc').find('li').each(function() {
    // 	if ($(this).find('ul').length != 0) {
    // 	    $(this).addClass('subentries');
    // 	    $(this).prepend('<span class="explode"></span>')
    // 	} else {
    // 	    $(this).addClass('nosubentries');
    // 	}
    // });   
 
    $('#toc').find('.subentries').find('ul').hide();
    $('.explode').click(function() {
    	switch_plode($(this));
    });
    $('.implode').click(function() {
    	switch_plode($(this));
    });
}

function switch_plode(e) {
    if (e.hasClass('explode')) {
	e.parent().find('ul').show();
	e.addClass('implode');
	e.removeClass('explode');
    } else {
	e.parent().find('ul').hide();
	e.addClass('explode');
	e.removeClass('implode');
    }
}
